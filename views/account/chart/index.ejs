
<% account.forEach(element => { %>
  <% const categoriesExpense = ["Food","Fuel","Automobile","Donations","Investment","Clothing","Personal Care","Groceries","Entertainment","Study","Travel/Vacation","Phone","House Hold","Health Care", "Gift"]
  const categoriesIncome = ["Savings","Salary","Interest","Gift","Credit"]
  
  %>
  <%
  const formatter = new Intl.NumberFormat('en-US', {
style: 'currency',
currency: 'INR',
minimumFractionDigits: 2
})%>
<div class="section white" >
  
    
      <h2 class="header center blue-text text-darken-4" style="font-family:Roboto; margin-top: 0px; margin-bottom:10px;">Charts for <a class="blue-text text-darken-4" href="../<%=element._id%>"><%=element.name%></a></a></h2>
      <hr width="70%">
    
    
  
</div>

                <div class="container">
                    <table class="striped centered responsive-table">      
                        <thead>
                          <tr>
                            <th>Income</th>
                              <th>Expense</th>
                              <th>Balance</th>
                              <th>Sum of Transactions</th>
                              <th>Variance</th>
                              
                          </tr>
                        </thead>
                        <tbody>
  
                                  
                          <tr style="font-weight:500;">
                            <td class = "green-text text-darken-1"><%= formatter.format(element.income)%>&#9650;</td>
                            <td class = "red-text text-darken-1"><%= formatter.format(element.expense)%>&#x25bc;</td>
                            

                            <td><%= formatter.format(element.currbal)%></td>
                            <td><%= formatter.format(element.transum)%></td>
                            <% variance = element.currbal-element.transum
                              if (variance < 0 && variance > -0.01)
                              {
                                variance *= -1.00
                              }
                            %>
                            <td><%= formatter.format(variance)%></td>
                            
                           
                            
                          </tr>
                        </tbody>
                      </table>
               
            </div>
            <h4 class="header center blue-text text-darken-4" style="font-family:Roboto; margin-top: 0px; margin-bottom:-10px;"><script type="text/javascript">document.write(moment(new Date(),"ddd MMM DD YYYY HH:MM:SS ZZ").format("MMMM"))</script>'s Cashflow</h4>
            
            
   
        
            <hr width="70%">
        <div class="container">
                    <table class="striped centered responsive-table">      
                        <thead>
                          <tr>
                              <th>Income</th>
                              <th>Expense</th>
                              <th>Savings</th>
                          </tr>
                        </thead>
                        <tbody>
  
                                  
                          <tr style="font-weight:500;">
                            
                            <td class = "green-text text-darken-1"><%= formatter.format(monthlyIncome)%>&#9650;</td>
                            <td class = "red-text text-darken-1"><%= formatter.format(monthlyExpense*-1)%>&#x25bc;</td>
                            
                            <td><%= formatter.format(monthlyIncome+monthlyExpense)%></td>
                           
                            
                          </tr>
                        </tbody>
                      </table>
               
            </div>

                
            <hr>
<div id = "balcm" class="modal white">
    <h5 class="header center light-blue-text text-darken-4" style="font-family:Roboto;">Balances (<script type="text/javascript">document.write(moment(new Date(),"ddd MMM DD YYYY HH:MM:SS ZZ").format("MMMM"))</script>)</h5>
  <hr width="85%">
    <canvas id="balcmch"></canvas>
  </div>
  <div id = "balcy" class="modal white">
    <h5 class="header center light-blue-text text-darken-4" style="font-family:Roboto;">Balances (<script type="text/javascript">document.write(moment(new Date(),"ddd MMM DD YYYY HH:MM:SS ZZ").format("YYYY"))</script>)</h5>
  <hr width="85%">
    <canvas id="balcych"></canvas>
  </div>
  <div id = "exdiscm" class="modal white">
    <h5 class="header center light-blue-text text-darken-4" style="font-family:Roboto;">Expenses (<script type="text/javascript">document.write(moment(new Date(),"ddd MMM DD YYYY HH:MM:SS ZZ").format("MMMM"))</script>)</h5>
  <hr width="85%">
    <canvas id="exdiscmch"></canvas>
  </div>
  <div id = "exdiscy" class="modal white">
    <h5 class="header center light-blue-text text-darken-4" style="font-family:Roboto;">Expenses (<script type="text/javascript">document.write(moment(new Date(),"ddd MMM DD YYYY HH:MM:SS ZZ").format("YYYY"))</script>)</h5>
  <hr width="85%">
    <canvas id="exdiscych"></canvas>
  </div>
  <div id = "cashflowy" class="modal white">
    <h5 class="header center light-blue-text text-darken-4" style="font-family:Roboto;">Cashflow (<script type="text/javascript">document.write(moment(new Date(),"ddd MMM DD YYYY HH:MM:SS ZZ").format("YYYY"))</script>)</h5>
  <hr width="85%">
    <canvas id="cashflowych"></canvas>
  </div>
  <div id = "cashflow" class="modal white">
    <h5 class="header center light-blue-text text-darken-4" style="font-family:Roboto;">Cashflow (LifeTime)</h5>
  <hr width="85%">
    <canvas id="cashflowch"></canvas>
  </div>
  <div id = "cashflowc" class="modal white">
    <h5 class="header center light-blue-text text-darken-4" style="font-family:Roboto;">Cashflow (Comparison)</h5>
  <hr width="85%">
    <canvas id="cashflowcch"></canvas>
  </div>

  <div class = "container">
    <div class="row">
      <div class="col s2 offset-s1 center">
        <a data-toggle="modal" class="modal-trigger btn light-blue darken-4" href="#balcm">Balances (<script type="text/javascript">document.write(moment(new Date(),"ddd MMM DD YYYY HH:MM:SS ZZ").format("MMM"))</script>)</a>
      </div>
      <div class="col s2 center">
        <a data-toggle="modal" class="modal-trigger btn light-blue darken-4" href="#balcy">Balances (<script type="text/javascript">document.write(moment(new Date(),"ddd MMM DD YYYY HH:MM:SS ZZ").format("YYYY"))</script>)</a>
      </div>
      <div class="col s2 center">
        <a data-toggle="modal" class="modal-trigger btn light-blue darken-4" href="#exdiscm">Expenses (<script type="text/javascript">document.write(moment(new Date(),"ddd MMM DD YYYY HH:MM:SS ZZ").format("MMM"))</script>)</a>
      </div>
      <div class="col s2 center">
        <a data-toggle="modal" class="modal-trigger btn light-blue darken-4" href="#exdiscy">Expenses (<script type="text/javascript">document.write(moment(new Date(),"ddd MMM DD YYYY HH:MM:SS ZZ").format("YYYY"))</script>)</a>
      </div>
      <div class="col s2 center">
        <a data-toggle="modal" class="modal-trigger btn light-blue darken-4" href="#cashflowy">Cashflow (<script type="text/javascript">document.write(moment(new Date(),"ddd MMM DD YYYY HH:MM:SS ZZ").format("YYYY"))</script>)</a>
      </div>
      
    </div>
    <div class="row"><div class="col s6 center">
        <a data-toggle="modal" class="modal-trigger btn light-blue darken-4" href="#cashflow">Cashflow (LifeTime)</a>
      </div>
      <div class="col s6 center">
        <a data-toggle="modal" class="modal-trigger btn light-blue darken-4" href="#cashflowc">Cashflow (Comparison)</a>
      </div>
      </div>
    
  </div>
  <script type = "text/javascript">
    balance = 0
    income = 0
    expense = 0
 
    var ctx = document.getElementById('cashflowcch').getContext('2d');
    
    "<%element.activity.filter(entry => ((entry.isActive == true && !entry.isexpense))).forEach(entry => {%>"
    income += parseFloat("<%=entry.amount%>")
    "<%})%>"
    "<%element.activity.filter(entry => ((entry.isActive == true && entry.isexpense))).forEach(entry => {%>"
    expense += parseFloat("<%=entry.amount*-1.00%>")
    "<%})%>"
      balance = income-expense
      balance = balance.toFixed(2)
var chart = new Chart(ctx, {
type: 'bar',
data: {
    labels: [''],
    datasets: [
      {
        label: 'Income',
        stack: 1,
        backgroundColor: '#ff9800',
        //lineTension:0,
        fill:false,
        data: [income],
    },{
        label: 'Savings',
        stack: 0,
        backgroundColor: '#0d47a1',
        //lineTension:0,
        fill:false,
        data: [balance],
    },
    {
        label: 'Expense',
        stack: 0,
        backgroundColor: '#00c853',
        //lineTension:0,
        fill:false,
        data: [expense],
    }
    ]
},
options: {
  scales:{
    yAxes:[{
      
      stacked:true,
      scaleLabel: {
        display: true,
        labelString: 'Amount'
      }
    }],
    xAxes:[{
      
      stacked:true,
      
    }]
  }
}
});
    </script>
  <script type = "text/javascript">
    year = []
    balance = []
    income = []
    expense = []
    length = new Date().getUTCFullYear() - 2020
    for(i = 0; i <= length;i++){
      balance.push(0)
      income.push(0)
      expense.push(0)
      year.push(new Date().getUTCFullYear()-i)
    }
    year = year.reverse()
    var ctx = document.getElementById('cashflowch').getContext('2d');
    
    "<%element.activity.filter(entry => ((entry.isActive == true && !entry.isexpense))).forEach(entry => {%>"
    income["<%=entry.tstamp.getUTCFullYear()-2020%>"] += parseFloat("<%=entry.amount%>")
    "<%})%>"
    "<%element.activity.filter(entry => ((entry.isActive == true && entry.isexpense))).forEach(entry => {%>"
    expense["<%=entry.tstamp.getUTCFullYear()-2020%>"] += parseFloat("<%=entry.amount*-1.00%>")
    "<%})%>"
    for(i=0;i<balance.length;i++) {
      balance[i] = income[i]-expense[i]
      balance[i] = balance[i].toFixed(2)
    }
var chart = new Chart(ctx, {
type: 'line',
data: {
    labels: year,
    datasets: [
      {
        label: 'Income',
        borderColor: '#ff9800',
        //lineTension:0,
        fill:false,
        data: income,
    },{
        label: 'Expense',
        borderColor: '#00c853',
        //lineTension:0,
        fill:false,
        data: expense,
    }
    ,{
        label: 'Savings',
        borderColor: '#0d47a1',
        //lineTension:0,
        fill:false,
        data: balance,
    }]
},
options: {
  responsive: true,
				tooltips: {
					mode: 'index',
					intersect: false,
				},
				hover: {
					mode: 'nearest',
					intersect: true
				},
  scales:{
    yAxes:[{
      scaleLabel: {
        display: true,
        labelString: 'Amount'
      }
    }],
    xAxes:[{
      scaleLabel: {
        display: true,
        labelString: 'Year'
      }
    }]
  }
}
});
    </script>

  <script type = "text/javascript">
    var ctx = document.getElementById('cashflowych').getContext('2d');
    balance = [0,0,0,0,0,0,0,0,0,0,0,0]
    income = [0,0,0,0,0,0,0,0,0,0,0,0]
    expense = [0,0,0,0,0,0,0,0,0,0,0,0]
    month = ["January","February","March","April","May","June","July","August","September","October","November","December"]
    "<%element.activity.filter(entry => ((entry.isActive == true && !entry.isexpense) && entry.tstamp.getUTCFullYear() == new Date().getUTCFullYear())).forEach(entry => {%>"
    income["<%=entry.tstamp.getMonth()%>"] += parseFloat("<%=entry.amount%>")
    "<%})%>"
    "<%element.activity.filter(entry => ((entry.isActive == true && entry.isexpense) && entry.tstamp.getUTCFullYear() == new Date().getUTCFullYear())).forEach(entry => {%>"
    expense["<%=entry.tstamp.getMonth()%>"] += parseFloat("<%=entry.amount*-1.00%>")
    "<%})%>"
    for(i=0;i<balance.length;i++) {
      balance[i] = income[i]-expense[i]
      balance[i] = balance[i].toFixed(2)
    }
var chart = new Chart(ctx, {
type: 'line',
data: {
    labels: month,
    datasets: [
      {
        label: 'Income',
        borderColor: '#ff9800',
        //lineTension:0,
        fill:false,
        data: income,
    },{
        label: 'Expense',
        borderColor: '#00c853',
        //lineTension:0,
        fill:false,
        data: expense,
    }
    ,{
        label: 'Savings',
        borderColor: '#0d47a1',
        //lineTension:0,
        fill:false,
        data: balance,
    }]
},
options: {
  responsive: true,
				tooltips: {
					mode: 'index',
					intersect: false,
				},
				hover: {
					mode: 'nearest',
					intersect: true
				},
  scales:{
    yAxes:[{
      scaleLabel: {
        display: true,
        labelString: 'Amount'
      }
    }],
    xAxes:[{
      scaleLabel: {
        display: true,
        labelString: 'Month'
      }
    }]
  }
}
});
    </script>

  <script type = "text/javascript">
    var ctx = document.getElementById('exdiscmch').getContext('2d');
    balance = []
    category = []
    color = []
    "<%element.activity.filter(entry => ((entry.isActive == true&&entry.isexpense) && (entry.tstamp.getMonth() == new Date().getMonth() && entry.tstamp.getUTCFullYear() == new Date().getUTCFullYear()))).forEach(entry => {%>"
    
    if(!category.includes("<%=entry.category%>")){
      category.push("<%=entry.category%>")
      balance.push(0)
      r = Math.floor(Math.random() * 200);
      g = Math.floor(Math.random() * 200);
      b = Math.floor(Math.random() * 200);
      color.push('rgb(' + r + ', ' + g + ', ' + b + ')')
    }
    if(category.includes("<%=entry.category%>")){
      i = category.indexOf("<%=entry.category%>")
      balance[i] += parseFloat("<%=entry.amount*-1.00%>")
    }
    "<%})%>"
   
    
    
var chart = new Chart(ctx, {
type: 'doughnut',
data: {
    labels: category,
    datasets: [{
        data: balance,
        backgroundColor: color,
    }]
},
options: {
  
}
});
    </script>

  <script type = "text/javascript">
    var ctx = document.getElementById('exdiscych').getContext('2d');
    balance = []
    category = []
    color = []
    "<%element.activity.filter(entry => ((entry.isActive == true && entry.isexpense) && entry.tstamp.getUTCFullYear() == new Date().getUTCFullYear())).forEach(entry => {%>"  
    if(!category.includes("<%=entry.category%>")){
      category.push("<%=entry.category%>")
      balance.push(0)
      r = Math.floor(Math.random() * 200);
      g = Math.floor(Math.random() * 200);
      b = Math.floor(Math.random() * 200);
      color.push('rgb(' + r + ', ' + g + ', ' + b + ')')
    }
    if(category.includes("<%=entry.category%>")){
      i = category.indexOf("<%=entry.category%>")
      balance[i] += parseFloat("<%=entry.amount*-1.00%>")
    }
    "<%})%>"
   
    
    
var chart = new Chart(ctx, {
type: 'doughnut',
data: {
    labels: category,
    datasets: [{
        data: balance,
        backgroundColor: color,
    }]
},
options: {
}
});
    </script>
  <script type = "text/javascript">
    var ctx = document.getElementById('balcych').getContext('2d');
    balance = []
    points = []
    counter = 1
    "<%element.activity.filter(entry => (entry.isActive == true && entry.tstamp.getUTCFullYear() == new Date().getUTCFullYear())).forEach(entry => {%>"
    balance.push("<%=entry.postranbal%>")
  
    points.push(counter)
    counter++;
    "<%})%>"
    
var chart = new Chart(ctx, {
type: 'line',
data: {
    labels: points,
    datasets: [{
        label: 'Balances',
        borderColor: '#0d47a1',
        //lineTension:0,
        fill:false,
        data: balance,
    }]
},
options: {
  scales:{
    yAxes:[{
      scaleLabel: {
        display: true,
        labelString: 'Amount'
      }
    }],
    xAxes:[{
      scaleLabel: {
        display: true,
        labelString: 'Transaction Count'
      }
    }]
  }
}
});
    </script>

<script type = "text/javascript">
    var ctx = document.getElementById('balcmch').getContext('2d');
    balance = []
    points = []
    
    counter = 1
    "<%element.activity.filter(entry => (entry.isActive == true && (entry.tstamp.getMonth() == new Date().getMonth() && entry.tstamp.getUTCFullYear() == new Date().getUTCFullYear()))).forEach(entry => {%>"
    balance.push("<%=entry.postranbal%>")
    
    points.push(counter)
    counter++;
    "<%})%>"
    
var chart = new Chart(ctx, {
type: 'line',
data: {
    labels: points,
    datasets: [{
        label: 'Balances',
        borderColor: '#0d47a1',
        //backgroundColor:'#2962ff',
        //steppedLine:'true',
        //lineTension:0,
        fill:false,
        data: balance,
        
    }]
},
options: {
  scales:{
    yAxes:[{
      scaleLabel: {
        display: true,
        labelString: 'Amount'
      }
    }],
    xAxes:[{
      scaleLabel: {
        display: true,
        labelString: 'Transaction Count'
      }
    }]
  }
}
});
    </script>
    <%})%>
  
