
<% account.forEach(element => { %>
  <%
  transactionCount = 0
  monthlyIncome = 0
  monthlyExpense = 0
  monthlyInvested = 0
   element.activity.filter(entry => (entry.isActive == true && (month == entry.tstamp.getMonth() && year  == entry.tstamp.getUTCFullYear()))).forEach(entry => {
     transactionCount += 1
     if(!entry.isexpense && (!entry.category.includes('Debit') && !entry.category.includes('Credit')))
     {
       monthlyIncome += entry.amount
     }
     else if(entry.isexpense && (!entry.category.includes('Debit') && !entry.category.includes('Investment') && !entry.category.includes('Credit'))){
       monthlyExpense += entry.amount
     }
     else if(entry.isexpense && (entry.category.includes('Investment'))){
       monthlyInvested += entry.amount*-1.00
     }
  })

  yearlyIncome = 0
  yearlyExpense = 0
  yearlyInvested = 0
  element.activity.filter(entry => ((entry.isActive == true && (!entry.category.includes('Debit','Credit'))) && (year == entry.tstamp.getUTCFullYear()))).forEach(entry => {
     
    if(!entry.isexpense && (!entry.category.includes('Debit') && !entry.category.includes('Credit')))
     {
       yearlyIncome += entry.amount
     }
     else if(entry.isexpense && (!entry.category.includes('Debit') && !entry.category.includes('Investment') && !entry.category.includes('Credit'))){
       yearlyExpense += entry.amount
     }
     else if(entry.isexpense && (entry.category.includes('Investment'))){
       yearlyInvested += entry.amount*-1.00
     }
  })
  %>  
<style>
  .modal { overflow: visible; }
.modal-body { overflow-y: visible !important; }
.income:hover span {display:none}
.income:hover:before {content:"100%"}
.invested:hover span {display:none}
.invested:hover:before {content:"<%=((investment)*100/element.income).toFixed(2)%>%"}
.expense:hover span {display:none}
.expense:hover:before {content:"<%=((element.expense-investment)*100/element.income).toFixed(2)%>%"}
.balance:hover span {display:none}
.balance:hover:before {content:"<%=(100 - element.expense*100/element.income).toFixed(2)%>%"}
.monthlyincome:hover span {display:none}
.monthlyincome:hover:before {content:"100%"}
.monthlyinvested:hover span {display:none}
.monthlyinvested:hover:before {content:"<%=(monthlyIncome==0?0.00:(monthlyInvested)*100/monthlyIncome).toFixed(2)%>%"}
.monthlyexpense:hover span {display:none}
.monthlyexpense:hover:before {content:"<%=(monthlyIncome==0.00?0.00:(monthlyExpense*-100/monthlyIncome)).toFixed(2)%>%"}
.monthlybalance:hover span {display:none}
.monthlybalance:hover:before {content:"<%=(monthlyIncome+monthlyExpense<0.00?0.00:(100 - monthlyExpense*-100/monthlyIncome)).toFixed(2)%>%"}
.yearlyincome:hover span {display:none}
.yearlyincome:hover:before {content:"100%"}
.yearlyinvested:hover span {display:none}
.yearlyinvested:hover:before {content:"<%=(yearlyIncome==0.00?0.00:(yearlyInvested)*100/yearlyIncome).toFixed(2)%>%"}
.yearlyexpense:hover span {display:none}
.yearlyexpense:hover:before {content:"<%=(yearlyIncome==0.00?0.00:(yearlyExpense*-100/yearlyIncome)).toFixed(2)%>%"}
.yearlybalance:hover span {display:none}
.yearlybalance:hover:before {content:"<%=(yearlyIncome+yearlyExpense<0.00?0.00:(100 - yearlyExpense*-100/yearlyIncome)).toFixed(2)%>%"}

</style>
 
  <%
  const monthCart = ["January","February","March","April","May","June","July","August","September","October","November","December"]
  const stockList = tickerStocks
  const stockValues = priceStocks
  %>
 <%
 const formatter = new Intl.NumberFormat('en-US', {
 style: 'currency',
 currency: element.currency,
 minimumFractionDigits: 2
 })
 const formatterDashboard = new Intl.NumberFormat('en-US', {
 style: 'currency',
 currency: element.currency,
 notation: "compact",
   compactDisplay: "short"
 })
 %>

<div class="fixed-action-btn">
  <%      
            link = '/'+year+'/'+parseFloat(month+1)
            if(month == (new Date().getMonth()) && year == (new Date().getUTCFullYear())){
              link = ''
            }
      %>
  <a class="btn-floating btn-large light-blue darken-4">
    <i class="large material-icons">tune</i>
  </a>
  <ul>
    <li><a title="Change Period" data-toggle="modal" href="#chperiod" class="btn-floating red modal-trigger"><i class="material-icons">today</i></a></li>
    <li><a title="Pivot Tables" data-toggle="modal" href="/account/<%=element._id%>/pivots<%=link%>" class="btn-floating pink accent-3 modal-trigger"><i class="material-icons">pivot_table_chart</i></a></li>
    <li><a title="Asset Management" data-toggle="modal" href="/account/<%=element._id%>/assets" class="btn-floating orange modal-trigger"><i class="material-icons">account_balance</i></a></li>    
  </ul>
</div>
<div class="section white" >
<div class="row" style="margin-bottom: -10px;">
  <div class="col s1 left">
    <%
        link = element._id
        if(month != new Date().getMonth())
        {
          link = '../../'+element._id+'/'+year+'/'+parseFloat(month+1)
        }
    %>
    <a class="btn-floating btn-medium waves-effect waves-light blue darken-4" href="../<%=link%>"><i class="material-icons">home</i></a>
  </div>
<div class="col s11">
        <h2 class="header center blue-text text-darken-4" style="font-family:Roboto; margin-top: 0px; margin-right: 100px;">Charts for <%=element.name%></h2>
  </div>
        
  </div>
  
    
    
  
</div>

<%investment = 0
 element.activity.filter(entry => (((entry.isActive == true && entry.isexpense) && entry.category.includes('Investment')))).forEach(entry => {
 investment += parseFloat(entry.amount*-1.00)
 })%>
             
                <hr width="70%">
                <div class="container">
                    <table class="striped centered responsive-table"style="margin-top:-20px">      
                        <thead>
                          <tr>
                            <th>Networth</th>
                            <th>Debt</th>
                            <th class = "income"><span>Income</span></th>
                              <th class = "invested"><span>Invested</span></th>
                              <th class = "expense"><span>Expense</span></th>
                              <th class = "balance"><span>Balance</span></th>
                              <th>Transactions</th>
                              <th>On Hold</th>
                              <th>Variance</th>
                              
                          </tr>
                        </thead>
                        <tbody>
                          <% 
              assetsWorth = 0
              element.asset.filter(entry => entry.isActive == true).forEach(entry => {
                if(entry.category == "Gold"){
                  assetPrice = priceGold*entry.units                  
                }
                else if(entry.category == "Silver"){
                  assetPrice = priceSilver*entry.units
                }
                else if(entry.category == "Equity"){
                  position = stockList.indexOf(entry.description)
                  assetPrice = stockValues[position]*entry.units
                }
                else if(entry.category == "Extra Charge"){
                  assetPrice = 0
                }
                else{
                  assetPrice = entry.amount*entry.units
                }
                assetsWorth += assetPrice
              })%>
                                  
                                  <tr style="font-weight:500;">
                                    <td><%= formatterDashboard.format(element.transum+element.onhold+assetsWorth)%></td>
                                    <td><%= formatterDashboard.format(element.debt)%></td>
                                    <td class = "green-text text-darken-1"><%= formatterDashboard.format(element.income)%>&#9650;</td>
                                    <td><%=formatterDashboard.format(investment)%></td>
                                    <td class = "red-text text-darken-1"><%= formatterDashboard.format(element.expense-investment)%>&#x25bc;</td>
                                    <td><%= formatterDashboard.format(element.currbal)%></td>
                                    <td><%= formatterDashboard.format(element.transum)%></td>
                                    <td><%= formatterDashboard.format(element.onhold)%></td>
                                    <% variance = element.currbal-(element.transum+element.onhold)
                                      if (variance < 0 && variance > -0.01)
                                      {
                                        variance *= -1.00
                                      }
                                    %>
                                    <td><%= formatterDashboard.format(variance)%></td>
                                    
                                   
                                    
                                  </tr>
                        </tbody>
                      </table>
               
            </div>
           

              
              
            
        <div class="container">
          <div class="row">
            <div class="col s6">
              <table class="striped centered responsive-table">
                <thead>
                          <tr>
                              <th><%=monthCart[month]%>
                    <hr>
                    </th>                    
                          </tr>
                        </thead>
                        <tbody>
              <table class="striped centered responsive-table" style="margin-top:-30px">      
                        <thead>
                          <tr>
                            <th class = "monthlyincome"><span>Income</span></th>
                            <th class = "monthlyexpense"><span>Expense</span></th>
                            <th class = "monthlyinvested"><span>Invested</span></th>
                            <th class = "monthlybalance"><span>Savings</span></th>
                          </tr>
                        </thead>
                        <tbody>
  
                                  
                          <tr style="font-weight:500;">
                            
                            <td class = "green-text text-darken-1"><%= formatter.format(monthlyIncome)%>&#9650;</td>
                            <td class = "red-text text-darken-1"><%= formatter.format((monthlyExpense == 0)?monthlyExpense:monthlyExpense*-1)%>&#x25bc;</td>
                            <td><%= formatter.format(monthlyInvested)%></td>
                            <td><%= formatter.format(monthlyIncome+monthlyExpense>0?monthlyIncome+monthlyExpense:0.00)%></td>
                           
                            
                          </tr>
                        </tbody>
                      </table>
                    </tbody>
                    </table>
            </div>
            <div class="col s6">
              <table class="striped centered responsive-table">
                <thead>
                          <tr>
                              <th><%=year%>
                    <hr>
                    </th>                    
                          </tr>
                        </thead>
                        <tbody>
              <table class="striped centered responsive-table" style="margin-top:-30px">      
                        <thead>
                          <tr>
                            <th class = "yearlyincome"><span>Income</span></th>
                              <th class = "yearlyexpense"><span>Expense</span></th>
                              <th class = "yearlyinvested"><span>Invested</span></th>
                              <th class = "yearlybalance"><span>Savings</span></th>
                          </tr>
                        </thead>
                        <tbody>
  
                                  
                          <tr style="font-weight:500;">
                            
                            <td class = "green-text text-darken-1"><%= formatter.format(yearlyIncome)%>&#9650;</td>
                            <td class = "red-text text-darken-1"><%= formatter.format((yearlyExpense == 0)?yearlyExpense:yearlyExpense*-1)%>&#x25bc;</td>
                            <td><%= formatter.format(yearlyInvested)%></td>
                            <td><%= formatter.format(yearlyIncome+yearlyExpense>0?yearlyIncome+yearlyExpense:0.00)%></td>
                           
                            
                          </tr>
                        </tbody>
                      </table>
                    </tbody>
                    </table>
            </div>
          </div>
               
            </div>

                
            
            <div id = "chperiod" class="modal white">
              <h5 class="header center light-blue-text text-darken-4" style="font-family:Roboto;">Change Period</h5>
  <a class="modal-close waves-effect waves-grey btn-flat right" style="top: -45px;"><i class="material-icons">close</i></a>
  <div class="row">
    <form action="/account/chart?_method=PUT" method="POST">
      <div class="input-field">
        <input name = "id" type="hidden" class="validate" required="" aria-required="true" value = "<%=element._id %>">
      </div>
      <div class="input-field col s5 offset-s1 center">
        <select name = "month" class="browser-default" style="margin-top:7px;">
        <%for(i = 0;i < 12;i++){%>
        <option value="<%=i+1%>" <%= month == i?'selected':''%>><%=monthCart[i]%></option>
      <%}%>
      </select>
      </div>
      <%
      yearCart = []
    count = new Date().getUTCFullYear() - element.tcreate.getUTCFullYear()
    for(i = 0;i<=count;i++){
      yearCart.push(new Date().getUTCFullYear()-i)
    }
      %>
      
      <div class="input-field col s5 center">
        <select name = "year" class="browser-default" style="margin-top:7px;">
        <%yearCart.forEach(year => {%>
        <option value="<%=year%>"><%=year%> </option>
      <%})%>
      </select>
      </div>
      <div class="input-field col s6 offset-s3 left center" style="width: 50%;">
        <input class="btn light-blue darken-4 white-text" value="CHANGE" type="submit">
      </div>
      </form>
    </div>

  </div>            
<div id = "balcm" class="modal white">
    <h5 class="header center light-blue-text text-darken-4" style="font-family:Roboto;">Balances (<%=monthCart[month]%>)</h5>
  <hr width="85%">
    <canvas id="balcmch"></canvas>
  </div>
  <div id = "balcy" class="modal white">
    <h5 class="header center light-blue-text text-darken-4" style="font-family:Roboto;">Balances (<%=year%>)</h5>
  <hr width="85%">
    <canvas id="balcych"></canvas>
  </div>
  <div id = "exdiscm" class="modal white">
    <h5 class="header center light-blue-text text-darken-4" style="font-family:Roboto;">Expenses (<%=monthCart[month]%>)</h5>
  <hr width="85%">
    <canvas id="exdiscmch"></canvas>
  </div>
  <div id = "exdiscy" class="modal white">
    <h5 class="header center light-blue-text text-darken-4" style="font-family:Roboto;">Expenses (<%=year%>)</h5>
  <hr width="85%">
    <canvas id="exdiscych"></canvas>
  </div>
  <div id = "cashflowy" class="modal white">
    <h5 class="header center light-blue-text text-darken-4" style="font-family:Roboto;">Cashflow (<%=year%>)</h5>
  <hr width="85%">
    <canvas id="cashflowych"></canvas>
  </div>
  <div id = "cashflow" class="modal white">
    <h5 class="header center light-blue-text text-darken-4" style="font-family:Roboto;">Cashflow (LifeTime)</h5>
  <hr width="85%">
    <canvas id="cashflowch"></canvas>
  </div>
  <div id = "cashflowc" class="modal white">
    <h5 class="header center light-blue-text text-darken-4" style="font-family:Roboto;">Cashflow (Comparison)</h5>
  <hr width="85%">
    <canvas id="cashflowcch"></canvas>
  </div>
  <div id = "income" class="modal white">
    <h5 class="header center light-blue-text text-darken-4" style="font-family:Roboto;">Income (LifeTime)</h5>
  <hr width="85%">
    <canvas id="incomech"></canvas>
  </div>
  <div id = "expense" class="modal white">
    <h5 class="header center light-blue-text text-darken-4" style="font-family:Roboto;">Expenses (LifeTime)</h5>
  <hr width="85%">
    <canvas id="expensech"></canvas>
  </div>
  <div id = "incomecy" class="modal white">
    <h5 class="header center light-blue-text text-darken-4" style="font-family:Roboto;">Income (<%=year%>)</h5>
  <hr width="85%">
    <canvas id="incomecych"></canvas>
  </div>
  <div id = "incomecm" class="modal white">
    <h5 class="header center light-blue-text text-darken-4" style="font-family:Roboto;">Income (<%=monthCart[month]%>)</h5>
  <hr width="85%">
    <canvas id="incomecmch"></canvas>
  </div>
  <div id = "invret" class="modal white">
    <h5 class="header center light-blue-text text-darken-4" style="font-family:Roboto;">InvRet (Comparison)</h5>
  <hr width="85%">
    <canvas id="invretch"></canvas>
  </div>
  <div id = "invcat" class="modal white">
    <h5 class="header center light-blue-text text-darken-4" style="font-family:Roboto;">Asset Categories</h5>
  <hr width="85%">
    <canvas id="invcatch"></canvas>
  </div>
  <div id = "equicat" class="modal white">
    <h5 class="header center light-blue-text text-darken-4" style="font-family:Roboto;">Equity Categories</h5>
  <hr width="85%">
    <canvas id="equicatch"></canvas>
  </div>
  <div id = "incomecat" class="modal white">
    <h5 class="header center light-blue-text text-darken-4" style="font-family:Roboto;">Income</h5>
  <hr width="85%">
  <div class="row">
      <div class="col s4 center">
        <a data-toggle="modal" class="modal-trigger btn light-blue darken-4" href="#incomecm">Income (<%=monthCart[month]%>)</a>
      </div>
      <div class="col s4 center">
        <a data-toggle="modal" class="modal-trigger btn light-blue darken-4" href="#incomecy">Income (<%=year%>)</a>
      </div>
      <div class="col s4 center">
        <a data-toggle="modal" class="modal-trigger btn light-blue darken-4" href="#income">Income (LifeTime)</a>
      </div>       
    </div>
    
  </div>
  <div id = "expensecat" class="modal white">
    <h5 class="header center light-blue-text text-darken-4" style="font-family:Roboto;">Expenses</h5>
  <hr width="85%">

  <div class="row">
      <div class="col s4 center">
        <a data-toggle="modal" class="modal-trigger btn light-blue darken-4" href="#exdiscm">Expenses (<%=monthCart[month]%>)</a>
      </div>
      <div class="col s4 center">
        <a data-toggle="modal" class="modal-trigger btn light-blue darken-4" href="#exdiscy">Expenses (<%=year%>)</a>
      </div>
      <div class="col s4 center">
        <a data-toggle="modal" class="modal-trigger btn light-blue darken-4" href="#expense">Expenses (LifeTime)</a>
      </div>  
    </div>
  </div>
  <div id = "balancecat" class="modal white">
    <h5 class="header center light-blue-text text-darken-4" style="font-family:Roboto;">Balances</h5>
  <hr width="85%">
  <div class="row">
      <div class="col s6 center">
        <a data-toggle="modal" class="modal-trigger btn light-blue darken-4" href="#balcm">Balances (<%=monthCart[month]%>)</a>
      </div>
      <div class="col s6 center">
        <a data-toggle="modal" class="modal-trigger btn light-blue darken-4" href="#balcy">Balances (<%=year%>)</a>
      </div>
      </div>
    
  </div>
  <div id = "cashflowcat" class="modal white">
    <h5 class="header center light-blue-text text-darken-4" style="font-family:Roboto;">Cashflow</h5>
  <hr width="85%">
  <div class="row">
        <div class="col s4 center">
        <a data-toggle="modal" class="modal-trigger btn light-blue darken-4" href="#cashflowy">Cashflow (<%=year%>)</a>
      </div>
      <div class="col s4 center">
        <a data-toggle="modal" class="modal-trigger btn light-blue darken-4" href="#cashflow">Cashflow (LifeTime)</a>
      </div>
      <div class="col s4 center">
        <a data-toggle="modal" class="modal-trigger btn light-blue darken-4" href="#cashflowc">Cashflow (Comparison)</a>
      </div>
    </div>
  </div>
  
  <div id = "assetscat" class="modal white">
    <h5 class="header center light-blue-text text-darken-4" style="font-family:Roboto;">Assets</h5>
  <hr width="85%">
  <div class="row">
    
      <div class="col s4 center">
        <a data-toggle="modal" class="modal-trigger btn light-blue darken-4" href="#invcat">Asset Cart</a>
      </div>
      <div class="col s4 center">
        <a data-toggle="modal" class="modal-trigger btn light-blue darken-4" href="#invret">Inv-Ret Compare</a>
        </div>
      <div class="col s4 center">
        <a data-toggle="modal" class="modal-trigger btn light-blue darken-4" href="#equicat">Equity Cart</a>
        </div>
        
      
        
      </div>
    </div>
    <div class="row">
      
    </div>
  </div>

  <div class = "container">
    <div class="row">
     
      <div class="col s2 offset-s1 center">
        <a data-toggle="modal" class="modal-trigger btn light-blue darken-4" href="#expensecat">Expenses</a>
      </div>
      <div class="col s2 center">
        <a data-toggle="modal" class="modal-trigger btn light-blue darken-4" href="#incomecat">Income</a>
      </div>
      <div class="col s2 center">
        <a data-toggle="modal" class="modal-trigger btn light-blue darken-4" href="#assetscat">Assets</a>
      </div> 
      <div class="col s2 center">
        <a data-toggle="modal" class="modal-trigger btn light-blue darken-4" href="#balancecat">Balances</a>
      </div> 
      <div class="col s2 center">
        <a data-toggle="modal" class="modal-trigger btn light-blue darken-4" href="#cashflowcat">Cashflow</a>
      </div> 
     
    </div>
    
  </div>
  
  
  <script type = "text/javascript">
    var ctx = document.getElementById('equicatch').getContext('2d');
    share = []
    ticker = []
    color = []
    "<%element.asset.filter(entry => (entry.isActive == true && entry.category.includes('Equity'))).forEach(entry => {%>"
    if(!ticker.includes("<%=entry.description%>")){
      ticker.push("<%=entry.description%>")
      share.push(0)
      r = Math.floor(Math.random() * 200);
      g = Math.floor(Math.random() * 200);
      b = Math.floor(Math.random() * 200);
      color.push('rgb(' + r + ', ' + g + ', ' + b + ')')
    }
    if(ticker.includes("<%=entry.description%>")){
      i = ticker.indexOf("<%=entry.description%>")
      share[i] += parseFloat("<%=entry.amount*1.00%>")
    }
    "<%})%>"
    
var chart = new Chart(ctx, {
type: 'doughnut',
data: {
    labels: ticker,
    datasets: [{
        data: share,
        backgroundColor: color,
    }]
},
});
    </script>
  <script type = "text/javascript">
    var ctx = document.getElementById('invcatch').getContext('2d');
    investment = []
    sector = []
    color = []
    "<%element.asset.forEach(entry => {%>"
    if(!sector.includes("<%=entry.category%>")){
      sector.push("<%=entry.category%>")
      investment.push(0)
      r = Math.floor(Math.random() * 200);
      g = Math.floor(Math.random() * 200);
      b = Math.floor(Math.random() * 200);
      color.push('rgb(' + r + ', ' + g + ', ' + b + ')')
    }
    if(sector.includes("<%=entry.category%>")){
      i = sector.indexOf("<%=entry.category%>")
      investment[i] += parseFloat("<%=entry.amount*1.00%>")
    }
    "<%})%>"
    
var chart = new Chart(ctx, {
type: 'doughnut',
data: {
    labels: sector,
    datasets: [{
        data: investment,
        backgroundColor: color,
    }]
},
});
    </script>
  <script type = "text/javascript">
    var ctx = document.getElementById('invretch').getContext('2d');
    investment = 0
    value = 0
    "<%element.asset.forEach(entry => {%>"
    investment += parseFloat("<%=entry.amount%>")
    if("<%=entry.category%>" == "Equity"){
      "<%index = stockList.indexOf(entry.description)%>"
      "<%index = parseFloat(index)%>"
      value += parseFloat("<%=stockValues[index]*entry.units%>")
    }
    else if("<%=entry.category%>" == "Gold"){
      value += parseFloat("<%=entry.units*priceGold%>")
    }
    else if("<%=entry.category%>" == "Silver"){
      value += parseFloat("<%=entry.units*priceSilver%>")
    }
    else if("<%=entry.category%>" == "Extra Charge"){
      value += 0
    }
    else{
      value += parseFloat("<%=entry.amount%>")
    }
    "<%})%>"
    investment = investment.toFixed(2)
    value = value.toFixed(2)
    returns = (value-investment).toFixed(2)
var chart = new Chart(ctx, {
type: 'bar',
data: {
    labels: [''],
    datasets: [
      {
        label: 'Investment',
        stack: 1,
        backgroundColor: '#ff9800',
        //lineTension:0,
        fill:false,
        data: [investment],
    },{
        label: 'Value',
        stack: 2,
        backgroundColor: '#0d47a1',
        //lineTension:0,
        fill:false,
        data: [value],
    },
    {
        label: 'Returns',
        stack: 3,
        backgroundColor: '#00c853',
        //lineTension:0,
        fill:false,
        data: [returns],
    }
    ]
},
options: {
  scales:{
    yAxes:[{
      
      stacked:true,
      scaleLabel: {
        display: true,
        labelString: 'Amount'
      }
    }],
    xAxes:[{
      
      stacked:true,
      
    }]
  }
}
});
    </script>
  <script type = "text/javascript">
    var ctx = document.getElementById('incomecmch').getContext('2d');
    balance = []
    category = []
    color = []
    "<%element.activity.filter(entry => (((entry.isActive == true && !entry.isexpense) && !entry.category.includes('Credit')) && (month == entry.tstamp.getMonth() && year == entry.tstamp.getUTCFullYear()))).forEach(entry => {%>"
    
    if(!category.includes("<%=entry.category%>")){
      category.push("<%=entry.category%>")
      balance.push(0)
      r = Math.floor(Math.random() * 200);
      g = Math.floor(Math.random() * 200);
      b = Math.floor(Math.random() * 200);
      color.push('rgb(' + r + ', ' + g + ', ' + b + ')')
    }
    if(category.includes("<%=entry.category%>")){
      i = category.indexOf("<%=entry.category%>")
      balance[i] += parseFloat("<%=entry.amount*1.00%>")
    }
    "<%})%>"
var chart = new Chart(ctx, {
type: 'doughnut',
data: {
    labels: category,
    datasets: [{
        data: balance,
        backgroundColor: color,
    }]
},
});
    </script>
  <script type = "text/javascript">
    var ctx = document.getElementById('incomecych').getContext('2d');
    balance = []
    category = []
    color = []
    "<%element.activity.filter(entry => (((entry.isActive == true && !entry.isexpense) && !entry.category.includes('Credit')) && (year == entry.tstamp.getUTCFullYear()))).forEach(entry => {%>"
    
    if(!category.includes("<%=entry.category%>")){
      category.push("<%=entry.category%>")
      balance.push(0)
      r = Math.floor(Math.random() * 200);
      g = Math.floor(Math.random() * 200);
      b = Math.floor(Math.random() * 200);
      color.push('rgb(' + r + ', ' + g + ', ' + b + ')')
    }
    if(category.includes("<%=entry.category%>")){
      i = category.indexOf("<%=entry.category%>")
      balance[i] += parseFloat("<%=entry.amount*1.00%>")
    }
    "<%})%>"
   
    
    
var chart = new Chart(ctx, {
type: 'doughnut',
data: {
    labels: category,
    datasets: [{
        data: balance,
        backgroundColor: color,
    }]
},
});
    </script>
  
  <script type = "text/javascript">
    var ctx = document.getElementById('expensech').getContext('2d');
    balance = []
    category = []
    color = []
    "<%element.activity.filter(entry => (((entry.isActive == true && entry.isexpense) && !entry.category.includes('Debit')))).forEach(entry => {%>"
    
    if(!category.includes("<%=entry.category%>")){
      category.push("<%=entry.category%>")
      balance.push(0)
      r = Math.floor(Math.random() * 200);
      g = Math.floor(Math.random() * 200);
      b = Math.floor(Math.random() * 200);
      color.push('rgb(' + r + ', ' + g + ', ' + b + ')')
    }
    if(category.includes("<%=entry.category%>")){
      i = category.indexOf("<%=entry.category%>")
      balance[i] += parseFloat("<%=entry.amount*-1.00%>")
    }
    "<%})%>"
   
    
    
var chart = new Chart(ctx, {
type: 'doughnut',
data: {
    labels: category,
    datasets: [{
        data: balance,
        backgroundColor: color,
    }]
},
});
    </script>
  <script type = "text/javascript">
    var ctx = document.getElementById('incomech').getContext('2d');
    balance = []
    category = []
    color = []
    "<%element.activity.filter(entry => (((entry.isActive == true && !entry.isexpense) && !entry.category.includes('Credit')))).forEach(entry => {%>"
    
    if(!category.includes("<%=entry.category%>")){
      category.push("<%=entry.category%>")
      balance.push(0)
      r = Math.floor(Math.random() * 200);
      g = Math.floor(Math.random() * 200);
      b = Math.floor(Math.random() * 200);
      color.push('rgb(' + r + ', ' + g + ', ' + b + ')')
    }
    if(category.includes("<%=entry.category%>")){
      i = category.indexOf("<%=entry.category%>")
      balance[i] += parseFloat("<%=entry.amount*1.00%>")
    }
    "<%})%>"
   
    
    
var chart = new Chart(ctx, {
type: 'doughnut',
data: {
    labels: category,
    datasets: [{
        data: balance,
        backgroundColor: color,
    }]
},

});
    </script>
  <script type = "text/javascript">
    var ctx = document.getElementById('cashflowcch').getContext('2d');
    investment = 0
    "<%element.activity.filter(entry => (((entry.isActive == true && entry.isexpense) && entry.category.includes('Investment')))).forEach(entry => {%>"
    investment += parseFloat("<%=entry.amount*-1.00%>")
    "<%})%>"
    investment = parseFloat(investment).toFixed(2)
    income = parseFloat("<%=element.income%>")
    expense = parseFloat("<%=element.expense%>")
    income = income.toFixed(2)
      expense = expense.toFixed(2)
      balance = income-expense
      balance = balance.toFixed(2)
      expense -= investment
var chart = new Chart(ctx, {
type: 'bar',
data: {
    labels: [''],
    datasets: [
      {
        label: 'Income',
        stack: 1,
        backgroundColor: '#ff9800',
        //lineTension:0,
        fill:false,
        data: [income],
    },{
        label: 'Savings',
        stack: 0,
        backgroundColor: '#0d47a1',
        //lineTension:0,
        fill:false,
        data: [balance],
    },
    {
        label: 'Expense',
        stack: 0,
        backgroundColor: '#00c853',
        //lineTension:0,
        fill:false,
        data: [expense],
    },
    {
        label: 'Investment',
        stack: 0,
        backgroundColor: '#9c27b0',
        //lineTension:0,
        fill:false,
        data: [investment],
    }
    ]
},
options: {
  scales:{
    yAxes:[{
      
      stacked:true,
      scaleLabel: {
        display: true,
        labelString: 'Amount'
      }
    }],
    xAxes:[{
      
      stacked:true,
      
    }]
  }
}
});
    </script>

    
  <script type = "text/javascript">
    year = []
    balance = []
    income = []
    expense = []
    investment = []
    length = new Date().getUTCFullYear() - parseFloat("<%=element.tcreate.getUTCFullYear()-1%>")
    for(i = 0; i <= length;i++){
      balance.push(0)
      income.push(0)
      expense.push(0)
      investment.push(0)
      year.push(new Date().getUTCFullYear()-i)
    }
    year = year.reverse()
    var ctx = document.getElementById('cashflowch').getContext('2d');
    
    "<%element.activity.filter(entry => (((entry.isActive == true && !entry.isexpense) && !entry.category.includes('Credit')))).forEach(entry => {%>"
    income["<%=entry.tstamp.getUTCFullYear()-element.tcreate.getUTCFullYear()+1%>"] += parseFloat("<%=entry.amount%>")
    "<%})%>"
    "<%element.activity.filter(entry => (((entry.isActive == true && entry.isexpense) && (!entry.category.includes('Investment') && !entry.category.includes('Debit'))))).forEach(entry => {%>"
    expense["<%=entry.tstamp.getUTCFullYear()-element.tcreate.getUTCFullYear()+1%>"] += parseFloat("<%=entry.amount*-1.00%>")
    "<%})%>"
    "<%element.activity.filter(entry => (((entry.isActive == true && entry.isexpense) && entry.category.includes('Investment')))).forEach(entry => {%>"
    investment["<%=entry.tstamp.getUTCFullYear()-element.tcreate.getUTCFullYear()+1%>"] += parseFloat("<%=entry.amount*-1.00%>")
    "<%})%>"
    for(i=0;i<balance.length;i++) {
      income[i] = income[i].toFixed(2)
      expense[i] = expense[i].toFixed(2)
      investment[i] = investment[i].toFixed(2)
      balance[i] = income[i]-expense[i]
      balance[i] = balance[i].toFixed(2)
      if(balance[i] < 0)
      {
        balance[i] = 0.00
      }
    }
var chart = new Chart(ctx, {
type: 'line',
data: {
    labels: year,
    datasets: [
      {
        label: 'Income',
        borderColor: '#ff9800',
        //lineTension:0,
        fill:false,
        data: income,
    },{
        label: 'Investment',
        borderColor: '#9c27b0',
        //lineTension:0,
        fill:false,
        data: investment,
    },
    {
        label: 'Expense',
        borderColor: '#00c853',
        //lineTension:0,
        fill:false,
        data: expense,
    }
    ,{
        label: 'Savings',
        borderColor: '#0d47a1',
        //lineTension:0,
        fill:false,
        data: balance,
    }]
},
options: {
  responsive: true,
				tooltips: {
					mode: 'index',
					intersect: false,
				},
				hover: {
					mode: 'nearest',
					intersect: true
				},
  scales:{
    yAxes:[{
      scaleLabel: {
        display: true,
        labelString: 'Amount'
      }
    }],
    xAxes:[{
      scaleLabel: {
        display: true,
        labelString: 'Year'
      }
    }]
  }
}
});
    </script>

  <script type = "text/javascript">
    var ctx = document.getElementById('cashflowych').getContext('2d');
    balance = [0,0,0,0,0,0,0,0,0,0,0,0]
    income = [0,0,0,0,0,0,0,0,0,0,0,0]
    expense = [0,0,0,0,0,0,0,0,0,0,0,0]
    investment = [0,0,0,0,0,0,0,0,0,0,0,0]
    month = ["January","February","March","April","May","June","July","August","September","October","November","December"]
    "<%element.activity.filter(entry => (((entry.isActive == true && !entry.isexpense) && !entry.category.includes('Credit')) && year == entry.tstamp.getUTCFullYear())).forEach(entry => {%>"
    income["<%=entry.tstamp.getMonth()%>"] += parseFloat("<%=entry.amount%>")
    "<%})%>"
    "<%element.activity.filter(entry => (((entry.isActive == true && entry.isexpense) && (!entry.category.includes('Investment') && !entry.category.includes('Debit'))) && year == entry.tstamp.getUTCFullYear())).forEach(entry => {%>"
    expense["<%=entry.tstamp.getMonth()%>"] += parseFloat("<%=entry.amount*-1.00%>")
    "<%})%>"
    
    "<%element.activity.filter(entry => (((entry.isActive == true && entry.isexpense) && entry.category.includes('Investment')) && year == entry.tstamp.getUTCFullYear())).forEach(entry => {%>"
    investment["<%=entry.tstamp.getMonth()%>"] += parseFloat("<%=entry.amount*-1.00%>")
    "<%})%>"
    
    for(i=0;i<balance.length;i++) {
      income[i] = income[i].toFixed(2)
      expense[i] = expense[i].toFixed(2)
      investment[i] = investment[i].toFixed(2)
      balance[i] = income[i]-expense[i]
      balance[i] = balance[i].toFixed(2)
      if(balance[i] < 0)
      {
        balance[i] = 0.00
      }
    }
var chart = new Chart(ctx, {
type: 'line',
data: {
    labels: month,
    datasets: [
      {
        label: 'Income',
        borderColor: '#ff9800',
        //lineTension:0,
        fill:false,
        data: income,
    },{
        label: 'Investment',
        borderColor: '#9c27b0',
        //lineTension:0,
        fill:false,
        data: investment,
    },{
        label: 'Expense',
        borderColor: '#00c853',
        //lineTension:0,
        fill:false,
        data: expense,
    }
    ,{
        label: 'Savings',
        borderColor: '#0d47a1',
        //lineTension:0,
        fill:false,
        data: balance,
    }]
},
options: {
  responsive: true,
				tooltips: {
					mode: 'index',
					intersect: false,
				},
				hover: {
					mode: 'nearest',
					intersect: true
				},
  scales:{
    yAxes:[{
      scaleLabel: {
        display: true,
        labelString: 'Amount'
      }
    }],
    xAxes:[{
      scaleLabel: {
        display: true,
        labelString: 'Month'
      }
    }]
  }
}
});
    </script>

  <script type = "text/javascript">
    var ctx = document.getElementById('exdiscmch').getContext('2d');
    balance = []
    category = []
    color = []
    "<%element.activity.filter(entry => (((entry.isActive == true && entry.isexpense) && !entry.category.includes('Debit')) && (month == entry.tstamp.getMonth() && year == entry.tstamp.getUTCFullYear()))).forEach(entry => {%>"
    
    if(!category.includes("<%=entry.category%>")){
      category.push("<%=entry.category%>")
      balance.push(0)
      r = Math.floor(Math.random() * 200);
      g = Math.floor(Math.random() * 200);
      b = Math.floor(Math.random() * 200);
      color.push('rgb(' + r + ', ' + g + ', ' + b + ')')
    }
    if(category.includes("<%=entry.category%>")){
      i = category.indexOf("<%=entry.category%>")
      balance[i] += parseFloat("<%=entry.amount*-1.00%>")
    }
    "<%})%>"
   
    
    
var chart = new Chart(ctx, {
type: 'doughnut',
data: {
    labels: category,
    datasets: [{
        data: balance,
        backgroundColor: color,
    }]
},
});
    </script>

  <script type = "text/javascript">
    var ctx = document.getElementById('exdiscych').getContext('2d');
    balance = []
    category = []
    color = []
    "<%element.activity.filter(entry => (((entry.isActive == true && entry.isexpense) && !entry.category.includes('Debit')) && year == entry.tstamp.getUTCFullYear())).forEach(entry => {%>"  
    if(!category.includes("<%=entry.category%>")){
      category.push("<%=entry.category%>")
      balance.push(0)
      r = Math.floor(Math.random() * 200);
      g = Math.floor(Math.random() * 200);
      b = Math.floor(Math.random() * 200);
      color.push('rgb(' + r + ', ' + g + ', ' + b + ')')
    }
    if(category.includes("<%=entry.category%>")){
      i = category.indexOf("<%=entry.category%>")
      balance[i] += parseFloat("<%=entry.amount*-1.00%>")
    }
    "<%})%>"
   
    
    
var chart = new Chart(ctx, {
type: 'doughnut',
data: {
    labels: category,
    datasets: [{
        data: balance,
        backgroundColor: color,
    }]
},
});
    </script>
  <script type = "text/javascript">
    var ctx = document.getElementById('balcych').getContext('2d');
    balance = []
    actualBalance = []
    points = []
    amounts = []
    counter = 1
    onholdBalance = []
    moneyOnHold = []
    money = 0
    if(parseFloat("<%=element.onhold%>") > 0)
    {
      "<%element.activity.filter(entry => ((entry.isActive == true && (entry.category == 'Debit' || entry.category == 'Credit')) && (year > entry.tstamp.getUTCFullYear()))).forEach(entry => {%>"
          if("<%=entry.category%>" == 'Debit')
          {
            money -= parseFloat("<%=entry.amount%>")
          }
          else{
            money -= parseFloat("<%=entry.amount%>")
          }
      "<%})%>"
    }
      moneyOnHold.push(money)
    "<%element.activity.filter(entry => (entry.isActive == true && year == entry.tstamp.getUTCFullYear())).forEach(entry => {%>"
    balance.push("<%=entry.postranbal%>")
    amounts.push("<%=entry.amount%>")
    if("<%=entry.category%>" == 'Debit')
    {
      li = moneyOnHold.length-1
      value = moneyOnHold[li]
      moneyOnHold.push(value+parseFloat("<%=entry.amount*-1.00%>"))
    }
    if("<%=entry.category%>" == 'Credit')
    {
      li = moneyOnHold.length-1
      value = moneyOnHold[li]
      moneyOnHold.push(value-parseFloat("<%=entry.amount%>"))
    }
    lo = moneyOnHold.length-1
    actualBalance.push(parseFloat("<%=entry.postranbal%>")-moneyOnHold[lo])
    onholdBalance.push(moneyOnHold[lo])
    points.push(counter)
    counter++;
    "<%})%>"
    
var chart = new Chart(ctx, {
type: 'line',
data: {
    labels: points,
    datasets: [{
        label: 'Balance',
        borderColor: '#000000',
        //lineTension:0,
        fill:false,
        data: balance,
    },
    {
        label: 'Actual Balance',
        borderColor: '#0d47a1',
        //lineTension:0,
        fill:false,
        data: actualBalance,
    },
    {
        label: 'On Hold',
        borderColor: '#ff5722',
        //lineTension:0,
        fill:false,
        data: onholdBalance,
        hidden: true
    },
    {
        label: 'Amount',
        borderColor: '#009688',
        //lineTension:0,
        fill:false,
        data: amounts,
        hidden: true
    }
  ]
},
options: {
  responsive: true,
				tooltips: {
					mode: 'index',
					intersect: false,
				},
				hover: {
					mode: 'nearest',
					intersect: true
				},
  scales:{
    yAxes:[{
      scaleLabel: {
        display: true,
        labelString: 'Amount'
      }
    }],
    xAxes:[{
      scaleLabel: {
        display: true,
        labelString: 'Transaction Count'
      }
    }]
  }
}
});
    </script>

<script type = "text/javascript">
    var ctx = document.getElementById('balcmch').getContext('2d');
    balance = []
    points = []
    amounts = []
    actualBalance = []
    counter = 1
    onholdBalance = []
    moneyOnHold = []
    isDebit = false
    money = 0
    if(parseFloat("<%=element.onhold%>") > 0)
    {
      "<%element.activity.filter(entry => ((entry.isActive == true && (entry.category == 'Debit' || entry.category == 'Credit')) && (entry.tstamp.getMonth() < month && year == entry.tstamp.getUTCFullYear()))).forEach(entry => {%>"
          if("<%=entry.category%>" == 'Debit')
          {
            money -= parseFloat("<%=entry.amount%>")
          }
          else{
            money -= parseFloat("<%=entry.amount%>")
          }
      "<%})%>"
    }
      moneyOnHold.push(money)
    "<%element.activity.filter(entry => (entry.isActive == true && (month == entry.tstamp.getMonth() && year == entry.tstamp.getUTCFullYear()))).forEach(entry => {%>"
    balance.push("<%=entry.postranbal%>")
    amounts.push("<%=entry.amount%>")
    
    if("<%=entry.category%>" == 'Debit')
    {
      li = moneyOnHold.length-1
      value = moneyOnHold[li]
      moneyOnHold.push(value+parseFloat("<%=entry.amount*-1.00%>"))
    }
    if("<%=entry.category%>" == 'Credit')
    {
      li = moneyOnHold.length-1
      value = moneyOnHold[li]
      moneyOnHold.push(value-parseFloat("<%=entry.amount%>"))
    }
    lo = moneyOnHold.length-1
    actualBalance.push(parseFloat("<%=entry.postranbal%>")-moneyOnHold[lo])
    onholdBalance.push(moneyOnHold[lo])
    points.push(counter)
    counter++;
    "<%})%>"
    
var chart = new Chart(ctx, {
type: 'line',
data: {
    labels: points,
    datasets: [{
        label: 'Balances',
        borderColor: '#000000',
        //backgroundColor:'#2962ff',
        //steppedLine:'true',
        //lineTension:0,
        fill:false,
        data: balance,
        
    },
    {
        label: 'Actual Balance',
        borderColor: '#0d47a1',
        //lineTension:0,
        fill:false,
        data: actualBalance,
    },
    {
        label: 'On Hold',
        borderColor: '#ff5722',
        //lineTension:0,
        fill:false,
        data: onholdBalance,
        hidden: true
    },
    {
        label: 'Amount',
        borderColor: '#009688',
        //lineTension:0,
        fill:false,
        data: amounts,
        hidden: true
    }]
},
options: {
  responsive: true,
				tooltips: {
					mode: 'index',
					intersect: false,
				},
				hover: {
					mode: 'nearest',
					intersect: true
				},
  scales:{
    yAxes:[{
      scaleLabel: {
        display: true,
        labelString: 'Amount'
      }
    }],
    xAxes:[{
      scaleLabel: {
        display: true,
        labelString: 'Transaction Count'
      }
    }]
  }
}
});
    </script>
    <%})%>
  
